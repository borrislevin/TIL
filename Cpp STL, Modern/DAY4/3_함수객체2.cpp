#include <iostream>

// 핵심 : 일반 함수는 "동작"을 표현할수 있지만 "상태"는 표현(저장)할수 없다.
//		  그래서, "전역변수" 등을 사용하게 된다.

// 0 ~ 9 사이의 난수를 반환하는 함수
// 0 ~ 9 사이의 "중복되지 않는" 난수를 반환하는 함수로 변경해 보세요
int urand()
{
	int v = rand() % 10;
	// 1. v를 어딘가 보관해야 한다.
	// 2. 이전에 v가 나온적이 있다면 다시 구해야 한다.
	// 질문 : 어디에 보관할까 ?
//	int history[10]; // 함수 종료와 함께 파괴 된다.
	static int history[10] = { 0 }; // 파괴 되지 않지만, 한번 초기화 된 값을 변경하거나 할수 없다.
								// 즉, 몇번 사용하다가 다시 reset 하는 기능을 넣을수 없다.
								// 차라리, 전역변수가 더 좋을수 있다.
	return v;
}

int main()
{
	for (int i = 0; i < 10; i++)
		std::cout << urand() << std::endl;
}





