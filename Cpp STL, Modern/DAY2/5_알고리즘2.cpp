#include <iostream>
#include <vector>
#include <list>
#include <algorithm>
#include "show.h"

// 알고리즘은 컨테이너를 알지 못한다. - 83 page .. 아주 중요한 개념..

// 1. remove() 알고리즘에는 vector 뿐 아니라 list도 보낼수 있습니다.

// 2. 결국, 알고리즘에서는 "메모리를 제거"할수는 없다.

// 3. 메모리를 제거하려면 "알고리즘(멤버가 아닌 함수)" 이 아닌 
//    각 컨테이너의 "멤버함수"를 사용해라!

int main()
{
	std::vector<int> v = { 1,2,3,1,2,3,1,2,3,1 };

	// remove : 주어진 구간에서 "특정값"을 제거
	//			메모리를 제거하는 것이 아니라,
	//			요소를 앞으로 당겨 놓는 일을 한다.
	//			반환값 p는 유효한 마지막 요소의 다음을 가리키는 반복자
	auto p = std::remove(v.begin(), v.end(), 3);

	show(v);  // 1 2 1 2 1 2 1  2 3 4	
			  //                ^
	// 유효하지 않은 요소제거. vector의 멤버 함수 사용
	v.erase(p, v.end());
	
	show(v);

	// 주의) !! 연속된 메모리에서는  위 방식이 결국 최선의 방식이다.!
	//     1. 필요 없는 요소 제거시, 다음요소를 앞으로 당겨 놓고..
	//     2. 마지막으로 버퍼 교체(줄이기)를 한다.


	return 0;
}



















//
