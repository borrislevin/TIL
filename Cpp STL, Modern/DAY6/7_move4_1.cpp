// 7_move4_1.cpp

int n1 = 10;
int n2 = n1;  // n1의 값이 n2로 복사됨.

//--------------------------------------------------
// 프로그램에서 점이 필요 하다. 구조체를 만들자
struct Point
{
	int x, y;
};

Point p1;
p1.x = 1;
p1.y = 2;

Point p2 = p1; // 안되는게 좋으세요? 되는게 좋으세요 ?
				// 되는게 좋다.. 그리고, p1의 x,y 가 p2로 자동으로 복사되는게 편하다.

// => 그래서 "사용자가 복사 생성자를 만들지 않으면 컴파일러가 제공하는데, 
//		      디폴트 구현은 모든 멤버를 복사해 준다" 라는 문법이 생김..

// 권장 1. "클래스 안에 포인터 멤버가 없다면 - 그냥 컴파일러가 생성해 주는 복사 생성자 사용하세요"
//------------------------------------------------
// 클래스 안에 포인터 멤버가 있을때..
class Cat
{
	char* name;
	int age;
	// 이하 코드는 move4 참고
};
Cat c1("AAA", 2);
Cat c2 = c1;

// 권장 2. 포인터 멤버가 있는 클래스는 "대부분 복사 생성자를 사용자가 만들어야 합니다."
//			얕은 복사 현상을 "깊은복사" 등의 기술로 해결 - 여기까지가 C++98

// 권장 3. 복사 생성자를 만들게 된다면, "Move 생성자"도 같이 만드세요.





